FUNCTION ZFM_BM_CS_SALES_ORG_SD29.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     REFERENCE(I_DATA) TYPE  ZST_BM_SALES_SD29
*"----------------------------------------------------------------------

  DATA: LSS_TPAKD           TYPE TPAKD.

  GS_DATASD29 = I_DATA.
  SELECT SINGLE
    *
      FROM TPAKD
       INTO CORRESPONDING FIELDS OF  GT_SD29
      WHERE PARVW = GS_DATASD29-PARVW
        AND KTOKD = GS_DATASD29-KTOKD .
  IF SY-SUBRC IS INITIAL.
    PERFORM CHECKSD29.
    GS_SD29-KTOKD = GS_DATASD29-KTOKD.
    GS_SD29-PARVW = GS_DATASD29-PARVW.
    MOVE-CORRESPONDING GS_SD29 TO LSS_TPAKD.
    UPDATE  TPAKD FROM LSS_TPAKD.

  ELSE.
    GS_SD29-KTOKD = GS_DATASD29-KTOKD.
    GS_SD29-PARVW = GS_DATASD29-PARVW.
    MOVE-CORRESPONDING GS_SD29 TO LSS_TPAKD.
    INSERT  TPAKD FROM LSS_TPAKD.
  ENDIF.
ENDFUNCTION.
FORM CHECKSD29.
  DATA:
    LS_TPAKD TYPE TPAKD,
    I_DATA   TYPE  ZST_BM_SALES_SD29.
*  DATA: LSS_TVKO            TYPE TVKO,
*        LS_TASSIGN_SD_VKORG TYPE TASSIGN_SD_VKORG.
  DATA: LSS_TPAKD            TYPE TPAKD.
  I_DATA = GS_DATASD29.
  SELECT SINGLE
    KTOKD
    PARVW
      FROM TPAKD
      INTO CORRESPONDING FIELDS OF  LS_TPAKD
      WHERE KTOKD = GS_DATASD29-KTOKD
            AND PARVW =  GS_DATASD29-PARVW.

  IF SY-SUBRC IS INITIAL .
    IF  GS_DATASD29-KTOKD IS INITIAL
      AND GS_DATASD29-PARVW IS INITIAL.

    ELSE.
      GS_SD29-KTOKD = GS_DATASD29-KTOKD.
      GS_SD29-PARVW = GS_DATASD29-PARVW.
      MOVE-CORRESPONDING GS_SD29 TO LSS_TPAKD.
      UPDATE  TPAKD FROM LSS_TPAKD.

    ENDIF.
  ENDIF.
ENDFORM.
