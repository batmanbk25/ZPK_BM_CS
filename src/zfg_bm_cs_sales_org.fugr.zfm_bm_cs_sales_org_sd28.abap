FUNCTION ZFM_BM_CS_SALES_ORG_SD28.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     REFERENCE(I_DATA) TYPE  ZST_BM_SALES_SD28
*"----------------------------------------------------------------------


  DATA: LSS_TKUPA            TYPE TKUPA.

  GS_DATASD28 = I_DATA.
  SELECT SINGLE
    *
      FROM TKUPA
       INTO CORRESPONDING FIELDS OF  GT_SD28
      WHERE KTOKD = GS_DATASD28-KTOKD.
  IF SY-SUBRC IS INITIAL.
    PERFORM CHECKSD28.
    GS_SD28-KTOKD = GS_DATASD28-KTOKD.
    GS_SD28-PARGR = GS_DATASD28-PARGR.
    MOVE-CORRESPONDING GS_SD28 TO LSS_TKUPA.
*    MOVE-CORRESPONDING GS_SD08 TO LS_TASSIGN_SD_VKORG.

    UPDATE  TKUPA FROM LSS_TKUPA.
*    UPDATE  TASSIGN_SD_VKORG FROM LS_TASSIGN_SD_VKORG.
  ELSE.
    GS_SD28-KTOKD = GS_DATASD28-KTOKD.
    GS_SD28-PARGR = GS_DATASD28-PARGR.


    MOVE-CORRESPONDING GS_SD28 TO LSS_TKUPA.
*    MOVE-CORRESPONDING GS_SD08 TO LS_TASSIGN_SD_VKORG.

    INSERT  TKUPA FROM LSS_TKUPA.
*    INSERT  TASSIGN_SD_VKORG FROM LS_TASSIGN_SD_VKORG.
  ENDIF.
ENDFUNCTION.
FORM CHECKSD28.
  DATA:
    LS_TKUPA TYPE TKUPA,
    I_DATA   TYPE  ZST_BM_SALES_SD28.
*  DATA: LSS_TVKO            TYPE TVKO,
*        LS_TASSIGN_SD_VKORG TYPE TASSIGN_SD_VKORG.
  DATA: LSS_TKUPA            TYPE TKUPA.
  I_DATA = GS_DATASD28.
  SELECT SINGLE
    KTOKD
      FROM TKUPA
      INTO CORRESPONDING FIELDS OF  LS_TKUPA
      WHERE KTOKD = GS_DATASD28-KTOKD.

  IF SY-SUBRC IS INITIAL .
    IF  GS_DATASD28-KTOKD IS INITIAL
      AND GS_DATASD28-PARGR IS INITIAL.

    ELSE.
      GS_SD28-KTOKD = GS_DATASD28-KTOKD.
      GS_SD28-PARGR = GS_DATASD28-PARGR.
      MOVE-CORRESPONDING GS_SD28 TO LSS_TKUPA.
      UPDATE  TKUPA FROM LSS_TKUPA.
    ENDIF.
  ENDIF.
ENDFORM.
